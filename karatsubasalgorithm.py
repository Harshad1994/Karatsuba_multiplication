# -*- coding: utf-8 -*-
"""KaratsubasAlgorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tn2jZ439y-is7tJjBR7XvrYqAP7_GRpt
"""

# implementing karatsuba multiplication algorithm for large numbers

x = 3141592653589793238462643383279502884197169399375105820974944592
y = 2718281828459045235360287471352662497757247093699959574966967627

def karatsuba_multiply(x,y):

    #step0 calculate a,b,c,d
  # step1  calculate a.c
  # step2 calculate b.d
  # step3 calculate (a+b).(c+d)
  # step4 step3 - step1 - step2
  # add them up

  n_x = len(str(x))
  n_y = len(str(y))

  if n_x != n_y:

      if n_x > n_y:
          diff = n_x - n_y
          y = '0'*diff+str(y)

      else:
          diff = n_y - n_x
          x = '0'*diff +str(x)


  n = len(str(x))


  # handling the base case
  if n < 2:
    return x*y

 

  #padding extra zeros for odd digit cases
  if (len(str(x))%2) != 0:
      x = '0' +str(x)
      y = '0' +str(y)
  
  n = len(str(x))

  m2 = n // 2



  a = int(x) // 10**(m2)
  b = int(x) % 10**(m2)
  c = int(y) // 10**(m2)
  d = int(y) % 10**(m2)

 

          
  step1 = karatsuba_multiply(a,c)
  step2 = karatsuba_multiply(b,d)
  step3 = karatsuba_multiply(a+b,c+d)

  step4 = step3 - step2 - step1


  result = step1* 10**(n) + step2 + step4* 10**(m2)

  return result

karatsuba_multiply(1234,5678)

1234*5678